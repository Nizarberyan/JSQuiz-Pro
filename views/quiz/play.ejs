<%- include('../partials/header', { title: 'Quiz - ' + theme, userId, userRole }) %>

<div class="flex-1">
    <div class="max-w-4xl mx-auto mt-10 p-6">
        <div class="bg-white rounded-lg shadow-lg p-8">
            <div class="text-center mb-8">
                <h1 class="text-3xl font-bold text-gray-800 mb-2">Quiz: <%= theme %></h1>
                <p class="text-gray-600">Question <span id="current-q">1</span> of <%= questions.length %></p>
                <div class="text-sm text-gray-500 mt-2">Score: <span id="score">0</span>/<%= questions.length %></div>
            </div>

            <div id="question-container">
                <div class="question-block p-6 border border-gray-200 rounded-lg">
                    <h3 class="text-lg font-semibold mb-4" id="question-text"></h3>
                    <div class="space-y-3" id="options-container"></div>
                </div>
            </div>

            <div class="text-center pt-6">
                <button id="next-btn" class="bg-blue-500 hover:bg-blue-600 text-white py-3 px-8 rounded-lg font-medium">
                    Next Question
                </button>
                <a href="/quizzes" class="ml-4 bg-gray-500 hover:bg-gray-600 text-white py-3 px-8 rounded-lg font-medium">
                    Cancel
                </a>
            </div>

            <div id="results" class="hidden text-center mt-8">
                <h2 class="text-2xl font-bold mb-4">Quiz Complete!</h2>
                <div class="bg-blue-100 rounded-lg p-6 mb-6">
                    <div class="text-4xl font-bold text-blue-600 mb-2" id="final-score"></div>
                    <div class="text-lg text-gray-700" id="percentage"></div>
                </div>
                <div class="space-x-4">
                    <a href="/quizzes" class="bg-blue-500 hover:bg-blue-600 text-white py-3 px-6 rounded-lg font-medium">
                        Choose Another Quiz
                    </a>
                    <a href="/quizzes/play/<%= encodeURIComponent(theme) %>" class="bg-green-500 hover:bg-green-600 text-white py-3 px-6 rounded-lg font-medium">
                        Play Again
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
const quiz = {
    theme: '<%= theme %>',
    questions: <%- JSON.stringify(questions) %>,
    currentQuestion: 0,
    score: 0,
    userAnswers: []
};

function showQuestion(index) {
    const question = quiz.questions[index];
    document.getElementById('current-q').textContent = index + 1;
    document.getElementById('question-text').textContent = question.question;
    
    const container = document.getElementById('options-container');
    container.innerHTML = '';
    
    question.options.forEach((option, optionIndex) => {
        const label = document.createElement('label');
        label.className = 'flex items-center p-3 border border-gray-300 rounded-lg hover:bg-gray-50 cursor-pointer option-label';
        label.innerHTML = `
            <input type="radio" name="option" value="${optionIndex}" class="mr-3 text-blue-500">
            <span>${option}</span>
        `;
        container.appendChild(label);
    });
    
    const isLast = index === quiz.questions.length - 1;
    document.getElementById('next-btn').textContent = isLast ? 'Finish Quiz' : 'Next Question';
}

function showFeedback() {
    const question = quiz.questions[quiz.currentQuestion];
    const correctAnswer = question.correctAnswer[0];
    const labels = document.querySelectorAll('.option-label');
    
    labels.forEach((label, index) => {
        const input = label.querySelector('input');
        input.disabled = true;
        
        if (index === correctAnswer) {
            label.classList.add('bg-green-100', 'border-green-500', 'text-green-800');
        } else if (input.checked) {
            label.classList.add('bg-red-100', 'border-red-500', 'text-red-800');
        }
    });
}

function nextQuestion() {
    const selected = document.querySelector('input[name="option"]:checked');
    if (!selected) {
        alert('Please select an answer!');
        return;
    }
    
    const userAnswer = parseInt(selected.value);
    const correctAnswer = quiz.questions[quiz.currentQuestion].correctAnswer[0];
    
    quiz.userAnswers[quiz.currentQuestion] = userAnswer;
    if (userAnswer === correctAnswer) {
        quiz.score++;
        document.getElementById('score').textContent = quiz.score;
    }
    
    showFeedback();
    document.getElementById('next-btn').disabled = true;
    
    setTimeout(() => {
        if (quiz.currentQuestion === quiz.questions.length - 1) {
            finishQuiz();
        } else {
            quiz.currentQuestion++;
            showQuestion(quiz.currentQuestion);
            document.getElementById('next-btn').disabled = false;
        }
    }, 1500);
}

function finishQuiz() {
    fetch('/quizzes/submit', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            theme: quiz.theme,
            answers: quiz.userAnswers,
            score: quiz.score
        })
    });
    
    const percentage = Math.round((quiz.score / quiz.questions.length) * 100);
    document.getElementById('final-score').textContent = `${quiz.score}/${quiz.questions.length}`;
    document.getElementById('percentage').textContent = `${percentage}%`;
    
    document.getElementById('question-container').style.display = 'none';
    document.getElementById('next-btn').style.display = 'none';
    document.getElementById('results').classList.remove('hidden');
}

document.getElementById('next-btn').addEventListener('click', nextQuestion);
showQuestion(0);
</script>

<%- include('../partials/footer') %>